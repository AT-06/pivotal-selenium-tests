plugins {
    id "io.qameta.allure" version "2.5"
}
group 'org.fundacionjala.pivotal'
version '1.0'

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

sourceCompatibility = 1.8

allprojects{
    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }  
    }
}


// In this section you declare the dependencies for your production and test code
dependencies {
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.12.0'
    compile group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
    compile 'com.github.AT-06:coreJavaProject:1.6'

    testCompile group: 'io.cucumber', name: 'cucumber-java', version: '2.4.0'
    testCompile group: 'io.cucumber', name: 'cucumber-testng', version: '2.4.0'
    testCompile group: 'io.cucumber', name: 'cucumber-picocontainer', version: '2.4.0'
    testCompile group: 'io.qameta.allure', name: 'allure-cucumber2-jvm', version: '2.6.0'
}

allure {
    version = '2.6.0'
    autoconfigure = true
}

// Checkstyle configuration
checkstyle {
    toolVersion = '8.9'
}

// FindBugs configuration
findbugs {
    toolVersion = '3.0.1'
}
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

// PMD configuration
pmd {
    ruleSets = ["java-basic", "java-braces", "java-unnecessary", "java-unusedcode", "java-strictexception"]
    toolVersion = '6.0.0'
}
tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task executeFeatures(type: Test) {
    doFirst {
        useTestNG()
        options {
            useDefaultListeners = false
            jvmArgs = ['-Dcucumber.options= ' +
                               '--glue org.fundacionjala.pivotal ' +
                               '--plugin pretty ' +
                               '--plugin io.qameta.allure.cucumber2jvm.AllureCucumber2Jvm']
            jvmArgs = ['-DUser=' + user]
            jvmArgs = ['-DPassword=' + password]
            jvmArgs = ['-DAPIToken=' + APIToken]
            jvmArgs = ['-Dbrowser=' + browser]

            jvmArgs = ['-DUserName=' + remoteUserName]
            jvmArgs = ['-DKey=' + remoteAccessKey]
            jvmArgs = ['-DremoteBrowser=' + remoteBrowserName]
            jvmArgs = ['-DOSVersion=' + remoteOS]
            jvmArgs = ['-DremotePlatform=' + remotePlatform]
            jvmArgs = ['-DremoteResolution=' + remoteResolution]
            jvmArgs = ['-DdockerUrl=' + dockerURL]
            jvmArgs = ['-DexplicitWait=' + explicitWait]
        }
        testLogging.showStandardStreams = true
        scanForTestClasses = false
        ignoreFailures = false
        reports.html.enabled = false
    }
    finalizedBy 'allureReport'
}
